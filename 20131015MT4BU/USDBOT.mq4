/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "www.USDBOT.com"
#property link      "http://www.USDBOT.com"

extern string Remark1 = "== USDBOT Settings ==";
extern int MagicNumber = 14995;
extern bool SignalsOnly = FALSE;
extern bool Alerts = FALSE;
extern bool SignalMail = FALSE;
extern bool PlaySounds = FALSE;
extern bool ECNBroker = FALSE;
extern int PipBuffer = 0;
extern bool EachTickMode = TRUE;
extern double Lots = 1.0;
extern bool MoneyManagement = FALSE;
extern int Risk = 0;
extern int Slippage = 5;
extern bool UseStopLoss = TRUE;
extern int StopLoss = 100;
extern bool UseTakeProfit = TRUE;
extern int TakeProfit = 100;
extern bool UseTrailingStop = FALSE;
extern int TrailingStop = 30;
extern bool MoveStopOnce = FALSE;
extern int MoveStopWhenPrice = 50;
extern int MoveStopTo = 1;
extern string Remark2 = "";
extern string Remark3 = "== Other Settings (ZIG ZAG SYSTEM)  ==";
extern int ExtDepth = 2;
extern int ExtDeviation = 1;
extern int ExtBackstep = 1;
extern string Remark4 = "== Partial close lot management ==";
extern string Remark5 = "== Two options for Partial closing; ==";
extern string Remark6 = "== Close Percent of Initial Lotsize ==";
extern string Remark7 = "== or Close Percent of Remaining Lotsize ==";
extern bool Use_Partial_Close = TRUE;
extern bool CloseFromInitialLotsize = TRUE;
extern int PipsTarget_1 = 10;
extern double CloseLotsPercentage_1 = 10.0;
extern int Move_SL_1 = 1;
extern int PipsTarget_2 = 20;
extern double CloseLotsPercentage_2 = 10.0;
extern int Move_SL_2 = 0;
extern int PipsTarget_3 = 40;
extern double CloseLotsPercentage_3 = 10.0;
extern int Move_SL_3 = 0;
extern int PipsTarget_4 = 60;
extern double CloseLotsPercentage_4 = 10.0;
extern int Move_SL_4 = 0;
extern string Remark8 = "== Partial close lot management END ==";
int gi_312 = 1;
int g_count_316 = 0;
int g_bars_320 = 0;
int g_bars_324;
int g_bars_328;
string gs_332 = "4-Digit Broker";
double gd_340 = 1.0;
int gi_348;
bool gi_352 = FALSE;
int gi_356 = 1;
double g_lots_360;
double g_lots_368;
double g_lots_376;
double g_lots_384;
double gd_392;
double gd_400;
double gd_408;
string g_comment_416;
string g_comment_424;

int init() {
   g_bars_324 = Bars;
   g_bars_328 = Bars;
   if (Digits == 3 || Digits == 5) {
      gs_332 = "5-Digit Broker";
      gd_340 = 10;
   }
   if (MarketInfo(Symbol(), MODE_MINLOT) == 0.01) gi_356 = 2;
   if (EachTickMode) gi_348 = 0;
   else gi_348 = 1;
   return (0);
}

int deinit() {
   return (0);
}

int start() {
   int l_ticket_8;
   double l_price_12;
   double l_price_20;
   double l_ord_stoploss_28;
   double ld_36;
   double ld_44;
   double l_icustom_72;
   double l_icustom_92;
   double l_icustom_112;
   if (!IsExpertEnabled()) {
      Alert("You did not allow your expert to run live, change your settings and apply the expert again");
      return (0);
   }
   int li_0 = 0;
   g_comment_416 = "123 Sell(#" + MagicNumber + ")";
   g_comment_424 = "123 Buy(#" + MagicNumber + ")";
   if (EachTickMode && Bars != g_bars_328) gi_352 = FALSE;
   int l_ord_total_4 = OrdersTotal();
   li_0 = 0;
   if (MoneyManagement) {
      if (Risk < 1 || Risk > 100) {
         Comment("Invalid Risk Value.");
         return (0);
      }
      Lots = MathFloor(100.0 * (AccountFreeMargin() * AccountLeverage() * Risk * Point * gd_340) / (Ask * MarketInfo(Symbol(), MODE_LOTSIZE) * MarketInfo(Symbol(), MODE_MINLOT))) * MarketInfo(Symbol(), MODE_MINLOT);
   }
   if (CloseFromInitialLotsize == FALSE) {
      g_lots_360 = NormalizeDouble(Lots * CloseLotsPercentage_1 / 100.0, gi_356);
      gd_392 = NormalizeDouble(Lots - g_lots_360, gi_356);
      g_lots_368 = NormalizeDouble(gd_392 * CloseLotsPercentage_2 / 100.0, gi_356);
      gd_400 = NormalizeDouble(gd_392 - g_lots_368, gi_356);
      g_lots_376 = NormalizeDouble(gd_400 * CloseLotsPercentage_3 / 100.0, gi_356);
      gd_408 = NormalizeDouble(gd_400 - g_lots_376, gi_356);
      g_lots_384 = NormalizeDouble(gd_408 * CloseLotsPercentage_4 / 100.0, gi_356);
   }
   if (CloseFromInitialLotsize == TRUE) {
      g_lots_360 = NormalizeDouble(Lots * CloseLotsPercentage_1 / 100.0, gi_356);
      gd_392 = NormalizeDouble(Lots - g_lots_360, gi_356);
      g_lots_368 = NormalizeDouble(Lots * CloseLotsPercentage_2 / 100.0, gi_356);
      gd_400 = NormalizeDouble(Lots - (g_lots_368 + g_lots_360), gi_356);
      g_lots_376 = NormalizeDouble(Lots * CloseLotsPercentage_3 / 100.0, gi_356);
      gd_408 = NormalizeDouble(Lots - (g_lots_376 + g_lots_368 + g_lots_360), gi_356);
      g_lots_384 = NormalizeDouble(Lots * CloseLotsPercentage_4 / 100.0, gi_356);
   }
   if (Use_Partial_Close) ManageOrders();
   if (g_bars_320 != Bars) {
      g_bars_320 = Bars;
      g_count_316 = 0;
   }
   int li_52 = 1;
   string ls_56 = "Not Found";
   string ls_64 = "None";
   while (ls_56 != "Found") {
      l_icustom_72 = iCustom(NULL, 0, "ZigZag", ExtDepth, ExtDeviation, ExtBackstep, 0, li_52);
      if (iHigh(NULL, 0, li_52) == l_icustom_72 || iLow(NULL, 0, li_52) == l_icustom_72) {
         ls_56 = "Found";
         if (iHigh(NULL, 0, li_52) == l_icustom_72) {
            ls_64 = "High";
            break;
         }
         if (iLow(NULL, 0, li_52) == l_icustom_72) {
            ls_64 = "Low";
            break;
         }
      }
      li_52++;
   }
   int li_80 = li_52;
   string ls_84 = "Not Found";
   while (ls_84 != "Found") {
      l_icustom_92 = iCustom(NULL, 0, "ZigZag", ExtDepth, ExtDeviation, ExtBackstep, 0, li_80);
      if (iHigh(NULL, 0, li_80) == l_icustom_92 && ls_64 == "Low") {
         ls_84 = "Found";
         break;
      }
      if (iLow(NULL, 0, li_80) == l_icustom_92 && ls_64 == "High") {
         ls_84 = "Found";
         break;
      }
      li_80++;
   }
   int li_100 = li_80;
   string ls_104 = "Not Found";
   while (ls_104 != "Found") {
      l_icustom_112 = iCustom(NULL, 0, "ZigZag", ExtDepth, ExtDeviation, ExtBackstep, 0, li_100);
      if (iHigh(NULL, 0, li_100) == l_icustom_112 && ls_64 == "High") {
         ls_104 = "Found";
         break;
      }
      if (iLow(NULL, 0, li_100) == l_icustom_112 && ls_64 == "Low") {
         ls_104 = "Found";
         break;
      }
      li_100++;
   }
   double l_icustom_120 = iCustom(NULL, 0, "ZigZag", ExtDepth, ExtDeviation, ExtBackstep, 0, li_52);
   double l_icustom_128 = iCustom(NULL, 0, "ZigZag", ExtDepth, ExtDeviation, ExtBackstep, 0, li_80);
   double l_icustom_136 = iCustom(NULL, 0, "ZigZag", ExtDepth, ExtDeviation, ExtBackstep, 0, li_100);
   double l_price_144 = 0;
   double l_price_152 = 0;
   if (l_icustom_136 < l_icustom_128 && l_icustom_128 > l_icustom_120 && l_icustom_120 > l_icustom_136) {
      l_price_144 = l_icustom_128 + PipBuffer * Point;
      l_price_152 = 0;
   }
   if (l_icustom_136 > l_icustom_128 && l_icustom_128 < l_icustom_120 && l_icustom_120 < l_icustom_136) {
      l_price_144 = 0;
      l_price_152 = l_icustom_128 - PipBuffer * Point;
   }
   string ls_160 = "None";
   if (g_count_316 < gi_312 && iOpen(NULL, 0, gi_348 + 0) < l_price_144 && iClose(NULL, 0, gi_348 + 0) >= l_price_144) ls_160 = "Open Long";
   if (g_count_316 < gi_312 && iOpen(NULL, 0, gi_348 + 0) > l_price_152 && iClose(NULL, 0, gi_348 + 0) <= l_price_152) ls_160 = "Open Short";
   Comment("Broker Type: ", gs_332, 
      "\n", "Long Entry: ", l_price_144, 
      "\n", "Short Entry: ", l_price_152, 
   "\n", "Trade Trigger: ", ls_160);
   ObjectDelete("Point1");
   ObjectCreate("Point1", OBJ_VLINE, 0, Time[li_52], 0);
   ObjectSet("Point1", OBJPROP_COLOR, Aqua);
   ObjectSet("Point1", OBJPROP_STYLE, STYLE_DASH);
   ObjectSet("Point1", OBJPROP_BACK, TRUE);
   ObjectDelete("Point2");
   ObjectCreate("Point2", OBJ_VLINE, 0, Time[li_80], 0);
   ObjectSet("Point2", OBJPROP_COLOR, Aqua);
   ObjectSet("Point2", OBJPROP_STYLE, STYLE_DASHDOT);
   ObjectSet("Point2", OBJPROP_BACK, TRUE);
   ObjectDelete("Point3");
   ObjectCreate("Point3", OBJ_VLINE, 0, Time[li_100], 0);
   ObjectSet("Point3", OBJPROP_COLOR, Aqua);
   ObjectSet("Point3", OBJPROP_STYLE, STYLE_DASHDOTDOT);
   ObjectSet("Point3", OBJPROP_BACK, TRUE);
   ObjectDelete("LongEntry");
   ObjectCreate("LongEntry", OBJ_HLINE, 0, 0, l_price_144);
   ObjectSet("LongEntry", OBJPROP_COLOR, Lime);
   ObjectSet("LongEntry", OBJPROP_STYLE, STYLE_DASHDOTDOT);
   ObjectSet("LongEntry", OBJPROP_BACK, TRUE);
   ObjectDelete("ShortEntry");
   ObjectCreate("ShortEntry", OBJ_HLINE, 0, 0, l_price_152);
   ObjectSet("ShortEntry", OBJPROP_COLOR, Red);
   ObjectSet("ShortEntry", OBJPROP_STYLE, STYLE_DASHDOTDOT);
   ObjectSet("ShortEntry", OBJPROP_BACK, TRUE);
   bool li_168 = FALSE;
   for (int l_pos_172 = 0; l_pos_172 < l_ord_total_4; l_pos_172++) {
      OrderSelect(l_pos_172, SELECT_BY_POS, MODE_TRADES);
      if (OrderType() <= OP_SELL && OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         li_168 = TRUE;
         if (OrderType() == OP_BUY) {
            if (li_0 == 3 && (EachTickMode && !gi_352) || (!EachTickMode && Bars != g_bars_328)) {
               OrderClose(OrderTicket(), OrderLots(), Bid, Slippage, MediumSeaGreen);
               if (SignalMail) SendMail("[Signal Alert]", "[" + Symbol() + "] " + DoubleToStr(Bid, Digits) + " Close Buy");
               if (!EachTickMode) g_bars_328 = Bars;
               li_168 = FALSE;
            } else {
               l_ord_stoploss_28 = OrderStopLoss();
               ld_36 = BreakEvenValue(MoveStopOnce, OrderTicket(), MoveStopTo, MoveStopWhenPrice);
               ld_44 = TrailingStopValue(UseTrailingStop, OrderTicket(), TrailingStop);
               if (ld_36 > l_ord_stoploss_28 && ld_36 != 0.0) l_ord_stoploss_28 = ld_36;
               if (ld_44 > l_ord_stoploss_28 && ld_44 != 0.0) l_ord_stoploss_28 = ld_44;
               if (l_ord_stoploss_28 != OrderStopLoss()) OrderModify(OrderTicket(), OrderOpenPrice(), l_ord_stoploss_28, OrderTakeProfit(), 0, MediumSeaGreen);
            }
         } else {
            if (li_0 == 4 && (EachTickMode && !gi_352) || (!EachTickMode && Bars != g_bars_328)) {
               OrderClose(OrderTicket(), OrderLots(), Ask, Slippage, DarkOrange);
               if (SignalMail) SendMail("[Signal Alert]", "[" + Symbol() + "] " + DoubleToStr(Ask, Digits) + " Close Sell");
               if (!EachTickMode) g_bars_328 = Bars;
               li_168 = FALSE;
            } else {
               l_ord_stoploss_28 = OrderStopLoss();
               ld_36 = BreakEvenValue(MoveStopOnce, OrderTicket(), MoveStopTo, MoveStopWhenPrice);
               ld_44 = TrailingStopValue(UseTrailingStop, OrderTicket(), TrailingStop);
               if ((ld_36 < l_ord_stoploss_28 && ld_36 != 0.0) || l_ord_stoploss_28 == 0.0) l_ord_stoploss_28 = ld_36;
               if ((ld_44 < l_ord_stoploss_28 && ld_44 != 0.0) || l_ord_stoploss_28 == 0.0) l_ord_stoploss_28 = ld_44;
               if (l_ord_stoploss_28 != OrderStopLoss() || OrderStopLoss() == 0.0) OrderModify(OrderTicket(), OrderOpenPrice(), l_ord_stoploss_28, OrderTakeProfit(), 0, DarkOrange);
            }
         }
      }
   }
   if (ls_160 == "Open Long") li_0 = 1;
   if (ls_160 == "Open Short") li_0 = 2;
   li_168 = FALSE;
   if (li_0 == 1 && (EachTickMode && !gi_352) || (!EachTickMode && Bars != g_bars_324)) {
      if (SignalsOnly) {
         if (SignalMail) SendMail("[Signal Alert]", "[" + Symbol() + "] " + DoubleToStr(Ask, Digits) + "Buy Signal");
         if (Alerts) Alert("[" + Symbol() + "] " + DoubleToStr(Ask, Digits) + "Buy Signal");
         if (PlaySounds) PlaySound("alert.wav");
      }
      if (!li_168 && !SignalsOnly) {
         if (AccountFreeMargin() < 1.0 * Lots) {
            Print("We have no money. Free Margin = ", AccountFreeMargin());
            return (0);
         }
         if (UseStopLoss) l_price_12 = Ask - StopLoss * Point;
         else l_price_12 = 0.0;
         if (UseTakeProfit) l_price_20 = Ask + TakeProfit * Point;
         else l_price_20 = 0.0;
         if (ECNBroker) l_ticket_8 = OrderModify(OrderSend(Symbol(), OP_BUY, Lots, Ask, Slippage, 0, 0, g_comment_424, MagicNumber, 0, DodgerBlue), OrderOpenPrice(), l_price_12, l_price_20, 0, CLR_NONE);
         if (!ECNBroker) l_ticket_8 = OrderSend(Symbol(), OP_BUY, Lots, Ask, Slippage, l_price_12, l_price_20, g_comment_424, MagicNumber, 0, DodgerBlue);
         if (l_ticket_8 > 0) {
            if (OrderSelect(l_ticket_8, SELECT_BY_TICKET, MODE_TRADES)) {
               Print("BUY order opened : ", OrderOpenPrice());
               if (SignalMail) SendMail("[Signal Alert]", "[" + Symbol() + "] " + DoubleToStr(Ask, Digits) + "Buy Signal");
               if (Alerts) Alert("[" + Symbol() + "] " + DoubleToStr(Ask, Digits) + "Buy Signal");
               if (PlaySounds) PlaySound("alert.wav");
               g_count_316++;
            } else Print("Error opening BUY order : ", GetLastError());
         }
         if (EachTickMode) gi_352 = TRUE;
         if (!EachTickMode) g_bars_324 = Bars;
         return (0);
      }
   }
   if (li_0 == 2 && (EachTickMode && !gi_352) || (!EachTickMode && Bars != g_bars_324)) {
      if (SignalsOnly) {
         if (SignalMail) SendMail("[Signal Alert]", "[" + Symbol() + "] " + DoubleToStr(Bid, Digits) + "Sell Signal");
         if (Alerts) Alert("[" + Symbol() + "] " + DoubleToStr(Bid, Digits) + "Sell Signal");
         if (PlaySounds) PlaySound("alert.wav");
      }
      if (!li_168 && !SignalsOnly) {
         if (AccountFreeMargin() < 1.0 * Lots) {
            Print("We have no money. Free Margin = ", AccountFreeMargin());
            return (0);
         }
         if (UseStopLoss) l_price_12 = Bid + StopLoss * Point;
         else l_price_12 = 0.0;
         if (UseTakeProfit) l_price_20 = Bid - TakeProfit * Point;
         else l_price_20 = 0.0;
         if (ECNBroker) l_ticket_8 = OrderModify(OrderSend(Symbol(), OP_SELL, Lots, Bid, Slippage, 0, 0, g_comment_416, MagicNumber, 0, DeepPink), OrderOpenPrice(), l_price_12, l_price_20, 0, CLR_NONE);
         if (!ECNBroker) l_ticket_8 = OrderSend(Symbol(), OP_SELL, Lots, Bid, Slippage, l_price_12, l_price_20, g_comment_416, MagicNumber, 0, DeepPink);
         if (l_ticket_8 > 0) {
            if (OrderSelect(l_ticket_8, SELECT_BY_TICKET, MODE_TRADES)) {
               Print("SELL order opened : ", OrderOpenPrice());
               if (SignalMail) SendMail("[Signal Alert]", "[" + Symbol() + "] " + DoubleToStr(Bid, Digits) + "Sell Signal");
               if (Alerts) Alert("[" + Symbol() + "] " + DoubleToStr(Bid, Digits) + "Sell Signal");
               if (PlaySounds) PlaySound("alert.wav");
               g_count_316++;
            } else Print("Error opening SELL order : ", GetLastError());
         }
         if (EachTickMode) gi_352 = TRUE;
         if (!EachTickMode) g_bars_324 = Bars;
         return (0);
      }
   }
   if (!EachTickMode) g_bars_328 = Bars;
   return (0);
}

double BreakEvenValue(int ai_0, int a_ticket_4, int ai_8, int ai_unused_12) {
   OrderSelect(a_ticket_4, SELECT_BY_TICKET, MODE_TRADES);
   if (OrderType() == OP_BUY) {
      if (ai_0 && MoveStopWhenPrice > 0)
         if (Bid - OrderOpenPrice() >= Point * MoveStopWhenPrice) return (OrderOpenPrice() + Point * ai_8);
   }
   if (OrderType() == OP_SELL) {
      if (ai_0 && MoveStopWhenPrice > 0)
         if (OrderOpenPrice() - Ask >= Point * MoveStopWhenPrice) return (OrderOpenPrice() - Point * ai_8);
   }
   if (OrderType() != OP_BUY || OrderType() != OP_SELL) return (0);
   return (0.0);
}

double TrailingStopValue(int ai_0, int a_ticket_4, int ai_8) {
   OrderSelect(a_ticket_4, SELECT_BY_TICKET, MODE_TRADES);
   if (OrderType() == OP_BUY) {
      if (ai_0 && ai_8 > 0)
         if (Bid - OrderOpenPrice() > Point * ai_8) return (Bid - Point * ai_8);
   }
   if (OrderType() == OP_SELL) {
      if (ai_0 && ai_8 > 0)
         if (OrderOpenPrice() - Ask > Point * ai_8) return (Ask + Point * ai_8);
   }
   if (OrderType() != OP_BUY || OrderType() != OP_SELL) return (0);
   return (0.0);
}

void ManageOrders() {
   for (int l_count_0 = 0; l_count_0 < OrdersTotal(); l_count_0++) {
      if (OrderType() == OP_BUY && OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         if (Bid >= OrderOpenPrice() + PipsTarget_1 * Point && OrderLots() == Lots) {
            RefreshRates();
            if (Move_SL_1 > 0) OrderModify(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() + Move_SL_1 * Point, OrderTakeProfit(), 0, CLR_NONE);
            RefreshRates();
            OrderClose(OrderTicket(), g_lots_360, MarketInfo(OrderSymbol(), MODE_BID), 0, CLR_NONE);
         }
      }
      if (OrderType() == OP_SELL && OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         if (Ask <= OrderOpenPrice() - PipsTarget_1 * Point && OrderLots() == Lots) {
            RefreshRates();
            if (Move_SL_1 > 0) OrderModify(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() - Move_SL_1 * Point, OrderTakeProfit(), 0, CLR_NONE);
            RefreshRates();
            OrderClose(OrderTicket(), g_lots_360, MarketInfo(OrderSymbol(), MODE_ASK), 0, CLR_NONE);
         }
      }
      if (OrderType() == OP_BUY && OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         if (Bid >= OrderOpenPrice() + PipsTarget_2 * Point && OrderLots() == gd_392) {
            RefreshRates();
            if (Move_SL_2 > 0) OrderModify(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() + Move_SL_2 * Point, OrderTakeProfit(), 0, CLR_NONE);
            RefreshRates();
            OrderClose(OrderTicket(), g_lots_368, MarketInfo(OrderSymbol(), MODE_BID), 0, CLR_NONE);
         }
      }
      if (OrderType() == OP_SELL && OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         if (Ask <= OrderOpenPrice() - PipsTarget_2 * Point && OrderLots() == gd_392) {
            RefreshRates();
            if (Move_SL_2 > 0) OrderModify(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() - Move_SL_2 * Point, OrderTakeProfit(), 0, CLR_NONE);
            RefreshRates();
            OrderClose(OrderTicket(), g_lots_368, MarketInfo(OrderSymbol(), MODE_ASK), 0, CLR_NONE);
         }
      }
      if (OrderType() == OP_BUY && OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         if (Bid >= OrderOpenPrice() + PipsTarget_3 * Point && OrderLots() == gd_400) {
            RefreshRates();
            if (Move_SL_3 > 0) OrderModify(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() + Move_SL_3 * Point, OrderTakeProfit(), 0, CLR_NONE);
            RefreshRates();
            OrderClose(OrderTicket(), g_lots_376, MarketInfo(OrderSymbol(), MODE_BID), 0, CLR_NONE);
         }
      }
      if (OrderType() == OP_SELL && OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         if (Ask <= OrderOpenPrice() - PipsTarget_3 * Point && OrderLots() == gd_400) {
            RefreshRates();
            if (Move_SL_3 > 0) OrderModify(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() - Move_SL_3 * Point, OrderTakeProfit(), 0, CLR_NONE);
            RefreshRates();
            OrderClose(OrderTicket(), g_lots_376, MarketInfo(OrderSymbol(), MODE_ASK), 0, CLR_NONE);
         }
      }
      if (OrderType() == OP_BUY && OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         if (Bid >= OrderOpenPrice() + PipsTarget_4 * Point && OrderLots() == gd_408) {
            RefreshRates();
            if (Move_SL_4 > 0) OrderModify(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() + Move_SL_4 * Point, OrderTakeProfit(), 0, CLR_NONE);
            RefreshRates();
            OrderClose(OrderTicket(), g_lots_384, MarketInfo(OrderSymbol(), MODE_BID), 0, CLR_NONE);
         }
      }
      if (OrderType() == OP_SELL && OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         if (Ask <= OrderOpenPrice() - PipsTarget_4 * Point && OrderLots() == gd_408) {
            RefreshRates();
            if (Move_SL_4 > 0) OrderModify(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() - Move_SL_4 * Point, OrderTakeProfit(), 0, CLR_NONE);
            RefreshRates();
            OrderClose(OrderTicket(), g_lots_384, MarketInfo(OrderSymbol(), MODE_ASK), 0, CLR_NONE);
         }
      }
   }
}
